#!/bin/bash

function valid_ip() {
    local ip=$1
    local stat=1

    if [[ $ip =~ ^[0-9]{1,3}(\.[0-9]{1,3}){3}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi

    return $stat
}

input="$1"
if [[ ! "$input" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$ ]]; then
    echo "Invalid input format. Please use X.X.X.X/X"
    exit 1
fi

ip_address=$(echo "$input" | cut -d '/' -f 1)
prefix=$(echo "$input" | cut -d '/' -f 2)

if ! valid_ip "$ip_address"; then
    echo "Invalid IP address. Please enter a valid IPv4 address."
    exit 1
fi

if [[ $prefix -lt 8 || $prefix -gt 30 ]]; then
    echo "Invalid prefix. Please enter a prefix between 8 and 30."
    exit 1
fi

network_addr=$(ipcalc "$ip_address"/"$prefix" | grep Network | awk '{print $2}')
last_addr=$(ipcalc "$ip_address"/"$prefix" | grep Broadcast | awk '{print $2}')
network=$(echo "$network_addr" | cut -f1 -d '/')
last=$(echo "$last_addr" | cut -f1 -d '/')

first_ip=$(printf "%d.%d.%d.%d" $(echo $network | tr "." " ") )
last_ip=$(printf "%d.%d.%d.%d" $(echo $last | tr "." " ") )

start=$(echo $first_ip | awk -F "." '{print $4+1}')
end=$(echo $last_ip | awk -F "." '{print $4-1}')

for i in $(seq $start $end); do
    current_ip=$(echo $first_ip | awk -F "." '{print $1"."$2"."$3"."}'"$i")
    if ping -c 1 -W 1 "$current_ip" > /dev/null 2>&1; then
        echo "$current_ip is active"
    fi
done
